% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/consensusClust.R
\name{consensusClust}
\alias{consensusClust}
\title{Perform consensus clustering on a scRNA-seq matrix}
\usage{
consensusClust(
  pca,
  pcNum = 15,
  nboots = 200,
  clusterFun = "leiden",
  bootSize = 0.8,
  resRange = seq.int(0.05, 1, by = 0.05),
  kNum = 30,
  mode = "robust",
  threads = 1,
  ...
)
}
\arguments{
\item{pca}{matrix of principal components, or a Seurat or SingleCellExperiment object from which these can be extracted.}

\item{pcNum}{number of principal components to consider when finding nearest neighbours.}

\item{nboots}{number of boostraps to perform.}

\item{clusterFun}{Which of the igraph community detection algorithms to use for clustering: "leiden" or "louvain".}

\item{bootSize}{fraction of total cell number to use per bootstrap.}

\item{resRange}{Numeric vector of resolutions to cluster over.}

\item{kNum}{number of nearest neighbours for knn graph construction.}

\item{mode}{How to deal with cluster assignments from different resolutions, either pick the one with highest silhouette score ('robust')
or use all when deciding consensus clusters ('granular').}

\item{threads}{How many cpus to use in parallel.}
}
\value{
list containing:
'assignments': character vector of consensus clustering assignments;
'res': the clustering resolution which produced these optimal assignments; and,
'dendrogram': dendrogram showing the relatedness of output cluster assignments, based on the co-clustering distance matrix
}
\description{
Perform consensus clustering on a scRNA-seq matrix
}
\examples{
library(consensusClustR)

#Make a fake PCA matrix
ncells <- 500
pca <- matrix(rpois(25000, 5), nrow=ncells)
colnames(pca) = c(1:50)
rownames(pca) = c(1:500)

#Cluster using default settings and 5 PCs:
results <- consensusClust(pca, pcNum = 5)

#Using 5 PCs, 1000 bootstraps, more fine resolutions, and 15 cpus:
results <- consensusClust(pca, pcNum = 5, nboots=1000, resRange = seq.int(0.1, 1, by = 0.025), threads = 15)

#Using 5 PCs, and provinding a SingleCellExperiment experiment object 'data' with scaled features in the "logcounts" assay, 
#and a boolean array specifying whether genes are highly variable in the 'varaible' column of rowData(data):
#Requires SingleCellExperiment and scater packages from bioconductor
library(SingleCellExperiment)
counts <- matrix(rpois(1000000, 5), ncol=ncells)
data <- t(scale(t(log2(counts + 1)))) # Scale and logcounts
colnames(data) = c(1:500)
rownames(data) = c(1:2000)
sce = SingleCellExperiment(assays=list(counts=counts, logcounts=data)) 
sce = scater::runPCA(sce, ntop=500)
results <- consensusClust(sce, pcNum = 5)

}
